-----Conflicts-----
    //2021 Jan L-værdi betinget (check egen mappe)

--------Added to Lex:----------
    //2021 Jan L-værdi betinget 
  | ':'             { COLON }
  | '?'             { QUESTION }

    //2021 Jan Alias as:
  | "alias"   -> ALIAS
  | "as"      -> AS
    
--------Added to Yacc:----------    
    //2021 Jan L-værdi betinget 
%right QUESTION COLON              /* 2021 Jan */
  | Expr QUESTION Access COLON Access   { CondExpAccess($1, $3, $5)}      /* 2021JAN - (e1 ? ae2 : ae3)   */
  
    //2021 Jan Alias as:
  | ALIAS NAME AS NAME SEMI StmtOrDecSeq     { Alias ($2, $4 ) :: $6 }  /* 2021 Jan  */

--------Added to Comp.fs:----------
//2021 Jan Alias as:
    | Alias(x, y) ->
        let (env, fdepth) = varEnv
        let (lookupY, typeY) = lookup env y
        let newEnv = ((x, (lookupY, typeY)) :: env, fdepth)
        (newEnv, [])
--------Added to Machine.fs:----------

--------Added to Machine.java:----------

---------Commands to test code----------
    //2021 Jan L-værdi betinget
1:
fslex --unicode CLex.fsl; if ($?) { fsyacc --module CPar CPar.fsy }
dotnet fsi -r C:\Users\jgrum\Documents\Programming\FSharp\LexAndYacc\FsLexYacc.Runtime.dll Absyn.fs CPar.fs CLex.fs Parse.fs Interp.fs ParseAndRun.fs
open ParseAndRun;;
fromFile "2021opg1.c";;
2:
fslex --unicode CLex.fsl; if ($?) { fsyacc --module CPar CPar.fsy }
dotnet fsi -r C:\Users\jgrum\Documents\Programming\FSharp\LexAndYacc\FsLexYacc.Runtime.dll Absyn.fs CPar.fs CLex.fs Parse.fs Machine.fs Comp.fs ParseAndComp.fs  

open ParseAndComp;;
compileToFile (fromFile "2021opg1.c") "2021opg1.out";;
javac Machine.java
java .\Machine.java .\2021opg1.out
java .\Machine.java .\2021opg1_ex2.out  
java .\Machine.java .\2021opg1_ex3.out  
   
    //2021 Jan Alias as:
fslex --unicode CLex.fsl; if ($?) { fsyacc --module CPar CPar.fsy }
dotnet fsi -r C:\Users\jgrum\Documents\Programming\FSharp\LexAndYacc\FsLexYacc.Runtime.dll Absyn.fs CPar.fs CLex.fs Parse.fs Interp.fs ParseAndRun.fs
1:
open ParseAndRun;;
fromFile "2021opg2_ex1.c";;

2:
fslex --unicode CLex.fsl; if ($?) { fsyacc --module CPar CPar.fsy }
dotnet fsi -r C:\Users\jgrum\Documents\Programming\FSharp\LexAndYacc\FsLexYacc.Runtime.dll Absyn.fs CPar.fs CLex.fs Parse.fs Machine.fs Comp.fs ParseAndComp.fs  

open ParseAndComp;;
compileToFile (fromFile "2021opg2_ex1.c") "2021opg2_ex1.out";;
javac Machine.java
java .\Machine.java .\2021opg2_ex1.out 10
java .\Machine.java .\2021opg2_ex2.out 10
